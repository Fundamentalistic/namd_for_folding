
if {! [info exists i_job]} { set i_job 0 }
set job_output_root "$output_root.job$i_job"

set outputbase $job_output_root
set filebase $job_output_root

if {! [info exists load_step] } {set load_step 1}
set steps_per_frame [expr $steps_per_run * $runs_per_frame * $load_step]

set dcd_filename_format "${outputbase}.%d.dcd"
set color_filename "${filebase}.targtemp.dat"
set color_scale_min $min_temp
set color_scale_max $max_temp
set fit_selection_text "backbone"
if {! [info exists fit_pdb_file] } {set fit_pdb_file $initial_pdb_file}

set color_file [open $color_filename "r"]

if {! [array exists replica_data]} {
  if {[molinfo num] > 0} {
    mol delete all
  }
  for {set replica_id 0} {$replica_id < $num_replicas} {incr replica_id} {
    set molid [mol new $psf_file]
    mol addfile $initial_pdb_file
    set replica_data($replica_id.molid) $molid
    set allsel [atomselect $molid "all"]
    set replica_data($replica_id.allsel) $allsel
    mol modcolor 0 $molid User
    mol colupdate 0 $molid 1
    mol scaleminmax $molid 0 $color_scale_min $color_scale_max
  }
  set fitmolid [mol new $psf_file]
  mol addfile $fit_pdb_file
  set basesel [atomselect $fitmolid $fit_selection_text]
}

for {set replica_id 0} {$replica_id < $num_replicas} {incr replica_id} {
  set molid $replica_data($replica_id.molid)
  mol top $molid
  set dcdfile [format $dcd_filename_format $replica_id]

  mol addfile $dcdfile type dcd first [expr $load_step - 1] step $load_step waitfor all
  set numframes [molinfo $molid get numframes]
  set replica_data($replica_id.numframes) $numframes

  set fitsel [atomselect $molid "index [$basesel get index]"]
  set allsel $replica_data($replica_id.allsel)

  for { set i 0 } { $i < $numframes } { incr i } {
    $fitsel frame $i
    $allsel frame $i
    $allsel move [measure fit $fitsel $basesel]
  }

  $fitsel delete
}

# $basesel delete
# mol delete $fitmolid

while {[gets $color_file colorvals] >= 0} {
  if {[llength $colorvals] != $num_replicas + 1} {
    error "short line in color file $color_filename: $colorvals"
  }
  if {[lindex $colorvals 0] % $steps_per_frame} { continue }
  set replica_id -1
  foreach colorval $colorvals {
    if {$replica_id < 0} {
      set frame [expr $colorval/$steps_per_frame]
      incr replica_id
      continue
    }
    if {$frame < $replica_data($replica_id.numframes)} {
      set allsel $replica_data($replica_id.allsel)
      $allsel frame $frame
      $allsel set user $colorval
    }
    incr replica_id
  }
  animate goto $frame
}

animate forward

